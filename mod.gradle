configurations {
    common
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    mappings "net.fabricmc:yarn:${project.yarn_mappings}"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation("com.terraformersmc:modmenu:${project.modmenu}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    implementation project(":")
    common project(":")
}

remapJar {
    // Set the source namespace, also valid for remapSourcesJar
    sourceNamespace = "named"
    // Set the target namespace, also valid for remapSourcesJar
    targetNamespace = "intermediary"
}

jar {
    configurations.common.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

processResources {
    // Meta
    inputs.property "name", rootProject.mod_name
    inputs.property "description", rootProject.description
    inputs.property "authors", rootProject.authors

    // Links
    inputs.property "repo", rootProject.repo
    inputs.property "discord", rootProject.discord

    // Versions
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version

    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "name": rootProject.mod_name,
                "description": rootProject.description,
                "authors": rootProject.authors,
                // Links
                "repo": project.repo,
                "discord": project.discord,
                // Versions
                "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    archivesBaseName = project.archives_base_name
}